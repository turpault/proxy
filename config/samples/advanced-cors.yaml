# Advanced CORS Proxy Configuration
# This example demonstrates advanced CORS proxy functionality with custom header forwarding
#
# Features demonstrated:
# - Advanced CORS configuration
# - Custom header forwarding
# - Multiple API endpoints
# - Different CORS policies per route
# - URL rewriting
# - Dynamic target support

# Server configuration
port: 80
httpsPort: 443
managementPort: 4481

# Let's Encrypt configuration
letsEncrypt:
  email: "admin@example.com"
  staging: false
  certDir: "./certificates"

# Routes configuration
routes:
  # Example 1: Public API with CORS
  - domain: "api.example.com"
    path: "/public"
    target: "https://api.public-service.com"
    cors:
      enabled: true
      origin: ["https://app.example.com", "https://admin.example.com"]
      credentials: false
      methods: ["GET", "POST"]
      allowedHeaders: ["Content-Type", "Authorization", "X-API-Key"]
      exposedHeaders: ["X-Total-Count", "X-Page-Count"]
      maxAge: 3600

  # Example 2: Private API with authentication
  - domain: "api.example.com"
    path: "/private"
    target: "https://api.private-service.com"
    cors:
      enabled: true
      origin: ["https://app.example.com"]
      credentials: true
      methods: ["GET", "POST", "PUT", "DELETE"]
      allowedHeaders: ["Content-Type", "Authorization"]
      exposedHeaders: ["X-User-Id", "X-Session-Id"]

  # Example 3: Admin API with restricted access
  - domain: "api.example.com"
    path: "/admin"
    target: "https://api.admin-service.com"
    cors:
      enabled: true
      origin: ["https://admin.example.com"]
      credentials: true
      methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
      allowedHeaders: [
        "Content-Type",
        "Authorization",
        "X-Admin-Token",
        "X-User-Role"
      ]
      exposedHeaders: [
        "X-Admin-Id",
        "X-Permissions",
        "X-Audit-Log"
      ]
      maxAge: 1800

  # Example 4: File upload API
  - domain: "api.example.com"
    path: "/upload"
    target: "https://api.upload-service.com"
    cors:
      enabled: true
      origin: ["https://app.example.com"]
      credentials: true
      methods: ["POST", "OPTIONS"]
      allowedHeaders: ["Content-Type", "Authorization", "X-File-Type"]
      exposedHeaders: ["X-Upload-Id", "X-File-Size"]
      maxAge: 7200

  # Example 5: WebSocket API
  - domain: "api.example.com"
    path: "/ws"
    target: "wss://api.websocket-service.com"
    cors:
      enabled: true
      origin: ["https://app.example.com"]
      credentials: true
      methods: ["GET", "POST"]
      allowedHeaders: ["Content-Type", "Authorization"]

  # Example 6: Analytics API with custom headers
  - domain: "api.example.com"
    path: "/analytics"
    target: "https://api.analytics-service.com"
    cors:
      enabled: true
      origin: ["https://app.example.com", "https://dashboard.example.com"]
      credentials: true
      methods: ["GET", "POST", "PUT"]
      allowedHeaders: [
        "Content-Type",
        "Authorization",
        "X-API-Key",
        "X-Client-Version",
        "X-User-Agent"
      ]
      exposedHeaders: [
        "X-Data-Points",
        "X-Processing-Time",
        "X-Cache-Status"
      ]
      maxAge: 86400

  # Example 7: Mobile API with specific requirements
  - domain: "api.example.com"
    path: "/mobile"
    target: "https://api.mobile-service.com"
    cors:
      enabled: true
      origin: ["https://mobile.example.com"]
      credentials: true
      methods: ["GET", "POST", "PUT", "DELETE"]
      allowedHeaders: ["Content-Type", "Authorization"]

# Security configuration
security:
  # Rate limiting
  rateLimitWindowMs: 900000  # 15 minutes
  rateLimitMaxRequests: 1000  # Higher limit for API usage

  # Global CSP configuration
  csp:
    enabled: true
    directives:
      defaultSrc: ["'self'"]
      scriptSrc: ["'self'", "'unsafe-inline'"]
      styleSrc: ["'self'", "'unsafe-inline'"]
      imgSrc: ["'self'", "data:", "https:"]
      connectSrc: [
        "'self'",
        "https://api.external-service.com",
        "https://public-api.external.com",
        "https://internal-api.company.com",
        "wss://websocket-service.com"
      ]
      fontSrc: ["'self'", "data:"]
      objectSrc: ["'none'"]
      mediaSrc: ["'self'"]
      frameSrc: ["'none'"]

# Logging configuration
logging:
  level: "info"
  file: "./logs/cors-proxy.log"

# Statistics configuration
statistics:
  enabled: true
  saveInterval: 300000  # 5 minutes
  maxEntries: 10000
  geolocation: true 